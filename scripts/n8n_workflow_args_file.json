{
    "nodes": [
      {
        "parameters": {
          "functionCode": "const sources = Object.entries($json)\n  .filter(([k,v]) => k && k.toString().startsWith('source') && v)\n  .map(([,v]) => v);\nconst target = $json.target || '';\nconst args = { sources, target };\nreturn { json: { ...$json, argsJson: JSON.stringify(args), json: { argsJson: JSON.stringify(args) } } };"
        },
        "id": "477f1af2-8b6b-451b-81d3-d5153298569b",
        "name": "Build Args JSON",
        "type": "n8n-nodes-base.functionItem",
        "typeVersion": 1,
        "position": [
          -1008,
          2992
        ]
      },
      {
        "parameters": {
          "command": "python /Users/niceday/Developer/Cloud/Dropbox/-Code-/Scripts/desktop/readme-flat/scripts/n8n_runner.py --mode mappings --config /Users/niceday/Developer/Cloud/Dropbox/-Code-/Data/srv/readme_flat/config.yaml --args-file /tmp/args.json"
        },
        "id": "a1b2c3d4-eeee-4444-9999-111122223333",
        "name": "readme_ListMappings",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          -112,
          2752
        ]
      },
      {
        "parameters": {
          "command": "python - <<'PY'\nimport json, os, sys\nfrom pathlib import Path\nrepo = Path('/Users/niceday/Developer/Cloud/Dropbox/-Code-//Scripts/desktop/readme-flat')\nsrc = repo / 'src'\nsys.path.insert(0, str(src))\nfrom readme_sync.services.config import ConfigManager\n# Config path and ensure directory\ncfg_path = Path('/Users/niceday/Developer/Cloud/Dropbox/-Code-/Data/srv/readme_flat/config.yaml')\ncfg_path.parent.mkdir(parents=True, exist_ok=True)\n# Load args from /tmp/args.json\nwith open('/tmp/args.json', 'r', encoding='utf-8') as f:\n    args = json.load(f)\ncm = ConfigManager(str(cfg_path))\nconf = cm.get_default_config()\nsrcs = [os.path.expanduser(p) for p in args.get('sources', []) if p]\nconf['source_folders'] = [{'path': p, 'enabled': True} for p in srcs]\nconf['target_folder'] = os.path.expanduser(args.get('target', '') or '')\ncm.save_config(conf)\nprint('config_written:', cfg_path)\nPY"
        },
        "id": "f1a2b3c4-d5e6-7890-abcd-1234567890ff",
        "name": "readme_Init",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          -640,
          2752
        ]
      },
      {
        "parameters": {
          "functionCode": "const raw = $json.stdout || '';\nlet data = {};\ntry { data = JSON.parse(raw); } catch (e) {\n  return [{ json: { error: 'Invalid JSON from runner', raw } }];\n}\nconst rows = Array.isArray(data.mappings) ? data.mappings : [];\nfunction fmt(ts){ return ts ? new Date(ts*1000).toISOString().replace('T',' ').slice(0,19) : '-'; }\nreturn rows.map(m => ({ json: {\n  id: m.id,\n  project: m.project_name,\n  filename: m.renamed_filename,\n  source: m.source_path,\n  target: m.target_path,\n  synced_at: fmt(m.last_sync_time),\n}}));"
        },
        "id": "f0f0f0f0-1234-5678-9abc-def012345678",
        "name": "Parse Mappings JSON",
        "type": "n8n-nodes-base.function",
        "typeVersion": 1,
        "position": [
          112,
          2752
        ]
      },
      {
        "parameters": {
          "command": "=printf '%s' '{{ $json.json.argsJson }}' > /tmp/args.json "
        },
        "id": "d99916e0-fabb-419b-8cc7-7e2428df97a8",
        "name": "Write Args File",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          -784,
          2992
        ]
      },
      {
        "parameters": {
          "command": "cat /tmp/args.json"
        },
        "id": "564a36b7-fe13-4874-8a0f-8edea8d51da2",
        "name": "Check Args File",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          -592,
          3264
        ]
      },
      {
        "parameters": {
          "keepOnlySet": true,
          "values": {
            "string": [
              {
                "name": "source1",
                "value": "/Users/niceday/Developer/Cloud/Dropbox/-Code-/Scripts"
              },
              {
                "name": "source2"
              },
              {
                "name": "source3"
              },
              {
                "name": "target",
                "value": "/Users/niceday/Developer/Cloud/Dropbox/-Code-/Data/file/APP/Obsidian/Remote-temp/[readme]"
              }
            ]
          },
          "options": {}
        },
        "id": "c2e63769-a0cf-430d-8b5d-a86d68878f32",
        "name": "readme_Paths",
        "type": "n8n-nodes-base.set",
        "typeVersion": 2,
        "position": [
          -1232,
          2992
        ]
      },
      {
        "parameters": {
          "command": "python /Users/niceday/Developer/Cloud/Dropbox/-Code-/Scripts/desktop/readme-flat/scripts/n8n_runner.py --mode sync --config /Users/niceday/Developer/Cloud/Dropbox/-Code-/Data/srv/readme_flat/config.yaml --args-file /tmp/args.json"
        },
        "id": "46600218-374e-4417-9d4a-c9273bc69e9e",
        "name": "readme_Sync",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          -496,
          2752
        ]
      },
      {
        "parameters": {
          "command": "python /Users/niceday/Developer/Cloud/Dropbox/-Code-/Scripts/desktop/readme-flat/scripts/n8n_runner.py --mode stop --config /Users/niceday/Developer/Cloud/Dropbox/-Code-/Data/srv/readme_flat/config.yaml --args-file /tmp/args.json"
        },
        "id": "bc378408-bec7-4b0e-92ce-325772c15bb7",
        "name": "readme_Stop",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          -496,
          3072
        ]
      },
      {
        "parameters": {
          "command": "python /Users/niceday/Developer/Cloud/Dropbox/-Code-/Scripts/desktop/readme-flat/scripts/n8n_runner.py --mode reset --config /Users/niceday/Developer/Cloud/Dropbox/-Code-/Data/srv/readme_flat/config.yaml --args-file /tmp/args.json"
        },
        "id": "3a022fcf-8cac-4b8a-8528-ec4623ed6f62",
        "name": "readme_Reset",
        "type": "n8n-nodes-base.executeCommand",
        "typeVersion": 1,
        "position": [
          -304,
          3072
        ]
      },
      {
        "parameters": {
          "rule": {
            "interval": [
              {
                "field": "seconds",
                "secondsInterval": 10
              }
            ]
          }
        },
        "type": "n8n-nodes-base.scheduleTrigger",
        "typeVersion": 1.2,
        "position": [
          -912,
          2752
        ],
        "id": "7f7d1d01-6487-49bc-8cbe-c8277b51a00f",
        "name": "Per 10s"
      }
    ],
    "connections": {
      "Build Args JSON": {
        "main": [
          [
            {
              "node": "Write Args File",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
  "Write Args File": {
    "main": [
      [
        {
          "node": "readme_Sync",
          "type": "main",
          "index": 0
        },
        {
          "node": "Check Args File",
          "type": "main",
          "index": 0
        }
      ]
    ]
  },
      "readme_Init": {
        "main": [
          [
            {
              "node": "readme_Sync",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "readme_Sync": {
        "main": [
          [
            {
              "node": "readme_ListMappings",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "readme_Paths": {
        "main": [
          [
            {
              "node": "Build Args JSON",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "readme_Stop": {
        "main": [
          [
            {
              "node": "readme_Reset",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "readme_ListMappings": {
        "main": [
          [
            {
              "node": "Parse Mappings JSON",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Per 10s": {
        "main": [
          [
            {
              "node": "readme_Paths",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "pinData": {},
    "meta": {
      "instanceId": "ad55c78445e196c7ac2248ec330e3883dfb5771bc7ab3e4c1b06e7f53395db24"
    }
  }
